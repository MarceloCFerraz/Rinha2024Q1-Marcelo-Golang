worker_processes auto; # Auto-detects the number of cores and launches that many worker processes

events {
    worker_connections 100; # Increase if you need to handle more than 1,000 connections simultaneously
}

http {
    access_log off;
    sendfile on;

    upstream api {
        server api01:8081; # api01
        server api02:8082; # api02
    }

    server {
        listen 9999 reuseport;
        # Enables use of the SO_REUSEPORT socket option. This will spawn multiple Go processes listening on the same port. learn more about socket sharding. NOTE: if enabled, the application will need to be ran through a shell because prefork mode sets environment variables. If you're using Docker, make sure the app is ran with CMD ./app or CMD ["sh", "-c", "/app"].

        location / {
            proxy_read_timeout 9000;
            proxy_connect_timeout 9000;
            proxy_send_timeout 9000;
            proxy_pass http://api;
        }
    }
}
